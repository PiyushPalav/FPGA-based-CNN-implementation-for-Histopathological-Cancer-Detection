#include <stdio.h>
#include "xaxidma.h"
#include "xparameters.h"
#include "xdebug.h"
#include "xcnn.h"
#include "ap_fixed.h"


#define MEM_BASE_ADDR 0x01000000
#define TX_BUFFER_BASE (MEM_BASE_ADDR + 0x00100000)
#define RX_BUFFER_BASE (MEM_BASE_ADDR + 0x00F00000)

#define TOTAL_WIDTH	16
#define INT_WIDTH	5
typedef ap_fixed<TOTAL_WIDTH, INT_WIDTH> float16_t;
float16_t *image_in_HW = (float16_t*)TX_BUFFER_BASE;
float16_t *m_dma_buffer_RX = (float16_t*)RX_BUFFER_BASE;

#define IMAGE_SIZE 1024
float16_t image[IMAGE_SIZE] = {0.685759,1.449454,-0.434327,0.558477,0.303912,0.507564,0.405738,-0.230675,-1.223478,-0.790718,0.660303,-2.267195,-2.954520,0.940324,-1.376217,-1.019826,-0.637979,0.354825,0.278455,-0.383414,-0.714348,0.456651,-0.688892,-1.376217,-0.332501,-0.103392,-0.459783,-0.205218,0.023890,-1.274391,-0.816174,0.125716,1.016694,0.354825,0.431194,0.176629,0.303912,0.049347,0.329368,-0.612522,-0.587066,-1.299848,-0.790718,1.551280,0.736672,-0.408870,-0.841631,-0.637979,0.176629,0.711216,0.889411,0.660303,0.813042,0.125716,-0.943457,-1.019826,-1.630782,-0.867087,0.151173,0.303912,0.965781,0.202086,0.252999,0.685759,0.634846,0.736672,1.220346,0.711216,0.685759,0.787585,1.882215,0.202086,-0.408870,0.202086,-1.019826,1.194889,0.303912,-0.536153,-0.027023,0.151173,0.813042,0.634846,0.405738,1.067607,1.169433,0.965781,0.252999,0.202086,-0.103392,0.329368,-0.688892,0.380281,0.456651,-0.052479,0.151173,0.023890,1.042150,-0.637979,-0.103392,0.074803,1.016694,0.533020,0.456651,0.100260,-0.179762,0.634846,0.125716,1.220346,-0.739805,0.125716,-1.401674,1.627650,0.252999,1.118520,0.736672,0.634846,0.914868,0.991237,1.347628,0.558477,0.736672,-0.103392,-0.459783,0.303912,-1.656239,-0.103392,-0.841631,-0.383414,0.711216,-2.088999,0.634846,1.220346,-0.103392,-0.587066,-1.401674,-0.256131,1.373085,0.252999,-0.612522,0.685759,0.685759,0.787585,-0.307044,-0.230675,0.762129,0.558477,0.354825,1.398541,0.049347,0.456651,-0.052479,0.736672,0.049347,-0.205218,-0.230675,-1.223478,-0.561609,-0.867087,-1.096196,-0.867087,-0.688892,0.329368,0.762129,-0.128849,-0.918000,-1.630782,-0.994370,-0.459783,-1.019826,-0.052479,0.252999,-0.867087,-0.765261,-0.841631,-0.663435,0.278455,-0.765261,1.551280,1.220346,1.805845,0.838498,0.354825,0.023890,0.125716,-0.077936,0.583933,0.813042,-0.637979,-0.637979,0.202086,-1.427130,-1.198022,0.278455,-0.256131,0.609390,0.176629,-0.001566,0.634846,-0.052479,-1.274391,1.398541,0.660303,0.838498,0.991237,-0.307044,-1.656239,0.787585,-0.357957,-1.198022,-0.027023,1.780389,0.685759,-0.332501,0.685759,0.583933,0.329368,-0.103392,-0.612522,-0.892544,0.202086,-1.274391,-1.503500,-1.503500,1.525824,1.296715,0.711216,1.220346,0.660303,0.049347,0.278455,0.762129,0.736672,0.278455,0.227542,-0.816174,1.627650,-0.001566,-0.485240,-0.052479,0.100260,-2.394477,-0.205218,0.558477,0.558477,-0.383414,-0.179762,1.653106,1.016694,-0.485240,-0.612522,-0.739805,0.329368,-0.841631,-1.223478,-0.841631,-1.452587,0.736672,0.736672,0.736672,-0.357957,0.380281,-0.332501,-1.045283,1.271259,1.118520,1.220346,1.729476,-0.587066,-0.205218,-0.536153,-1.503500,-1.198022,0.482107,0.991237,0.558477,1.220346,-0.485240,-1.299848,0.787585,1.500367,-1.096196,-0.867087,-0.841631,1.067607,0.405738,-0.612522,-0.612522,-2.394477,-1.147109,-0.790718,-0.001566,0.533020,1.500367,-1.758065,-0.918000,-0.587066,0.100260,0.634846,1.067607,0.456651,-0.485240,-0.001566,-0.867087,-0.918000,0.303912,1.831302,1.449454,1.347628,-0.307044,-1.070739,0.431194,0.660303,-0.459783,-0.103392,0.660303,0.787585,0.533020,0.151173,-0.383414,0.431194,-1.605326,-1.325304,1.245802,1.296715,0.227542,-0.485240,-0.510696,-0.077936,-0.434327,0.507564,1.449454,0.787585,-1.478043,-0.663435,-1.299848,-2.496303,-0.994370,0.838498,1.194889,0.431194,0.125716,-0.434327,0.685759,1.449454,0.278455,0.380281,-0.561609,-0.256131,-0.332501,-0.714348,0.456651,0.609390,-1.299848,-2.954520,-0.408870,1.754932,0.456651,-1.223478,-0.281588,0.303912,0.354825,0.634846,1.296715,1.169433,-0.714348,-0.816174,0.634846,0.889411,1.423998,1.271259,0.736672,-0.077936,1.398541,-0.077936,1.220346,1.169433,1.143976,-0.485240,0.736672,-0.765261,0.889411,-0.128849,0.252999,-0.027023,-3.209085,1.347628,-2.012630,-2.445390,-1.630782,0.838498,0.482107,-0.103392,-0.816174,-0.357957,-1.579869,-1.961717,-0.459783,0.711216,0.380281,-0.154305,0.940324,-0.230675,0.252999,0.762129,0.507564,0.609390,1.322172,1.271259,1.602193,1.805845,1.016694,0.991237,0.558477,0.863955,1.831302,-0.128849,-1.299848,1.220346,0.558477,-2.649042,-2.852694,0.354825,0.456651,1.729476,0.634846,0.940324,-0.459783,-1.656239,-1.452587,-0.383414,-0.179762,-0.561609,0.380281,0.838498,-1.274391,-1.783521,-0.714348,1.118520,1.576737,-2.088999,0.202086,-0.001566,1.169433,-0.612522,-2.267195,-2.419934,-0.790718,-0.459783,-0.383414,0.354825,0.533020,0.431194,0.813042,0.227542,-1.350761,-1.325304,0.558477,0.074803,0.023890,-0.408870,1.449454,0.074803,0.074803,-0.154305,0.609390,1.474911,-1.121652,-2.801781,1.678563,0.100260,-0.943457,-1.198022,1.805845,-0.663435,-1.885347,-2.063543,-1.961717,0.380281,-0.077936,0.736672,0.100260,-0.332501,0.863955,-0.103392,-0.841631,-0.307044,-1.070739,0.507564,0.431194,0.940324,-3.158172,-1.732608,-0.459783,0.507564,-0.154305,-1.656239,0.303912,1.576737,0.863955,-0.256131,0.940324,-1.274391,-0.307044,-1.656239,0.023890,-1.681695,-1.325304,-0.154305,-0.587066,-0.205218,-0.103392,-0.892544,-0.816174,0.558477,0.049347,-0.765261,-0.230675,0.380281,0.482107,0.583933,0.685759,-0.510696,0.380281,0.074803,-0.790718,0.431194,-0.256131,1.245802,-1.758065,-2.088999,0.838498,0.074803,0.634846,-1.045283,-1.630782,0.583933,0.660303,1.220346,0.100260,0.125716,-0.918000,0.863955,0.914868,-0.179762,1.296715,-0.077936,-0.281588,1.551280,0.278455,1.831302,0.151173,1.576737,1.245802,0.278455,1.678563,0.991237,0.329368,-0.561609,0.456651,0.533020,-1.096196,-1.910804,1.398541,0.303912,0.940324,-0.077936,-1.070739,-0.714348,0.125716,0.991237,0.813042,0.813042,-1.503500,0.507564,-0.434327,-0.027023,1.296715,-0.739805,0.405738,0.889411,0.125716,0.456651,0.863955,0.482107,0.736672,1.398541,0.940324,-1.630782,-2.598129,-1.147109,-0.536153,1.220346,0.787585,1.754932,1.882215,1.271259,-0.001566,0.533020,-0.739805,-0.765261,-1.096196,1.220346,1.347628,-0.052479,0.507564,0.252999,1.143976,-0.892544,0.889411,0.380281,0.049347,1.169433,-0.637979,0.634846,0.252999,0.252999,1.551280,0.940324,-0.485240,-0.459783,-0.968913,0.252999,-0.536153,-2.419934,1.271259,0.023890,1.220346,-1.732608,0.991237,-1.376217,-0.154305,-0.867087,1.551280,-2.088999,-1.910804,-0.510696,1.322172,0.431194,-0.510696,-1.096196,0.023890,-0.027023,1.474911,-1.910804,-0.077936,-0.536153,0.176629,-0.154305,0.278455,1.627650,-0.434327,0.049347,-2.598129,1.423998,-0.383414,-0.892544,-2.623586,1.704019,0.863955,-0.968913,-3.870954,-0.790718,-0.027023,0.634846,1.373085,-0.383414,-0.587066,-0.027023,0.202086,-0.485240,-0.408870,-0.281588,0.431194,-0.485240,1.271259,-0.968913,-1.579869,1.169433,-0.510696,-0.052479,-0.103392,-0.536153,1.627650,-1.045283,0.125716,0.252999,1.093063,-0.841631,-2.165369,0.711216,1.373085,0.405738,1.347628,-3.183629,0.405738,-0.256131,0.074803,0.202086,1.194889,0.023890,0.813042,-0.765261,-1.248935,1.194889,1.831302,-0.332501,0.533020,0.227542,0.303912,0.074803,-0.637979,-1.910804,-1.503500,0.456651,-0.739805,-0.077936,-0.587066,-2.445390,-1.427130,-1.223478,-2.139912,0.965781,0.100260,0.533020,1.423998,-0.001566,1.805845,0.991237,0.456651,0.507564,0.533020,-0.052479,-0.256131,-1.198022,-0.001566,1.042150,-1.732608,0.736672,-0.485240,-2.139912,-0.332501,-0.994370,-0.816174,-3.259998,1.093063,-0.459783,1.602193,0.074803,0.023890,-0.077936,-1.961717,-1.427130,-1.325304,0.634846,0.074803,0.176629,1.169433,-0.256131,0.252999,-0.561609,1.220346,1.143976,0.711216,0.074803,1.296715,-0.077936,-0.205218,1.143976,-2.496303,-0.383414,-0.816174,1.016694,0.711216,0.431194,-0.612522,0.405738,0.176629,0.049347,-2.038086,0.151173,1.729476,0.940324,-1.528956,-0.841631,1.449454,0.685759,1.500367,0.558477,0.303912,0.049347,-0.052479,-1.656239,0.049347,1.194889,1.373085,0.405738,0.176629,0.991237,1.093063,-1.808978,-2.063543,0.914868,-0.205218,0.736672,-0.892544,-0.332501,0.278455,0.533020,0.303912,-1.248935,-1.376217,0.711216,0.329368,0.049347,0.354825,-0.281588,-0.408870,-0.612522,0.176629,0.125716,0.380281,-1.503500,-0.714348,0.940324,-1.070739,-0.307044,-0.790718,0.227542,0.278455,-0.128849,1.016694,0.736672,0.583933,0.533020,-1.299848,-0.714348,-1.885347,-0.281588,0.278455,0.354825,0.813042,0.558477,-0.408870,-1.376217,-1.961717,0.202086,0.914868,-0.459783,1.525824,-2.674499,-0.943457,1.093063,0.151173,1.169433,0.100260,0.736672,0.151173,0.100260,-0.205218,0.609390,-0.536153,-1.172565,-0.994370,0.914868,0.813042,-1.758065,-1.325304,0.329368,-0.307044,0.354825,0.838498,0.227542,-0.663435,-0.256131,-1.274391,-1.885347,0.074803,0.533020,0.940324,-0.434327,0.762129,0.609390,-2.165369,-1.147109,0.049347,1.780389,-0.256131,0.125716,-0.536153,0.965781,0.151173,0.227542,0.991237,-0.307044,-0.459783,-0.739805,0.889411,-2.674499,0.660303,0.278455,0.125716,-0.841631,-0.001566,0.634846,-0.918000,-0.205218,-0.357957,-1.019826,0.354825,-0.256131,0.456651,0.940324,0.558477,1.093063,-1.096196,-2.114456,1.093063,1.525824,1.347628,0.074803,0.278455,-0.230675,1.245802,0.151173,0.736672,-2.114456,-2.445390,1.118520,-0.230675,0.227542,1.423998,-0.001566,-1.096196,-0.408870,-0.001566,0.482107,-0.688892,-1.198022,-0.408870,-0.663435,-0.001566,-0.816174,1.093063,1.576737,0.329368,1.347628,-0.637979,0.329368,0.609390,1.093063,-0.867087,-0.561609,1.296715,-0.714348,0.634846,0.736672,-0.179762,-1.070739,-1.376217,1.194889,0.151173,1.347628,1.551280,1.296715,0.736672,0.074803,0.456651,-0.052479,-0.663435,-0.459783,0.583933,0.533020,-1.579869,-1.987173,-0.383414,1.933128,0.329368,0.329368,-0.383414,0.660303,-0.357957,1.245802,0.329368,-0.485240,1.016694,-1.503500,-0.612522,0.252999,-0.332501,0.813042,0.583933,1.296715,0.303912,0.634846,-1.859891,-1.452587,-0.205218,0.278455,0.202086,0.634846,0.329368,-0.994370,0.634846,-0.994370,-1.121652,-1.707152,0.049347,1.118520,0.965781,1.423998,0.838498,0.583933,1.016694,1.474911,1.194889,1.678563,1.271259,-2.216282,-0.943457,-0.994370,1.093063,0.863955,0.125716,1.016694};

XAxiDma AxiDma;
int initDMA(){
	XAxiDma_Config *Config;
	int status;
	xil_printf("\r\n--- Entering DMA --- \r\n");
	Config = XAxiDma_LookupConfig(XPAR_AXI_DMA_0_DEVICE_ID);
	if (!Config) {
		xil_printf("No config found for DMA %d\r\n", XPAR_AXI_DMA_0_DEVICE_ID);
		return XST_FAILURE;
	}

	/* Initialize DMA engine */
	status = XAxiDma_CfgInitialize(&AxiDma, Config);
	if (status != XST_SUCCESS) {
		xil_printf("Initialization failed %d for DMA\r\n", status);
		return XST_FAILURE;
	}

	// Disabling interrupts
	XAxiDma_IntrDisable(&AxiDma,XAXIDMA_IRQ_ALL_MASK,XAXIDMA_DEVICE_TO_DMA);
	XAxiDma_IntrDisable(&AxiDma,XAXIDMA_IRQ_ALL_MASK,XAXIDMA_DMA_TO_DEVICE);
	xil_printf("Initialization done for DMA\n");
	return XST_SUCCESS;
}

XCnn cnn;
int initCNN(){
	XCnn_Config *Config;
	int status;
	xil_printf("\r\n--- Entering CNN --- \r\n");
	Config = XCnn_LookupConfig(XPAR_CNN_0_DEVICE_ID);
	if (!Config) {
		xil_printf("No config found for CNN %d\r\n", XPAR_CNN_0_DEVICE_ID);
		return XST_FAILURE;
	}

	/* Initialize DMA engine */
	status = XCnn_CfgInitialize(&cnn, Config);
	if (status != XST_SUCCESS) {
		xil_printf("Initialization failed %d for CNN\r\n", status);
		return XST_FAILURE;
	}

	xil_printf("Initialization done\n");
	return XST_SUCCESS;
}

int main(void)
{
	initDMA();
	initCNN();

	printf("Starting convolution \n");

	for (int idx = 0; idx < IMAGE_SIZE; idx++)
	{
		image_in_HW[idx] = image[idx];
	}

	XCnn_Start(&cnn);
	printf("Started convolution \n");

	Xil_DCacheFlushRange((u32)image_in_HW, IMAGE_SIZE*sizeof(float16_t));
	Xil_DCacheFlushRange((u32)m_dma_buffer_RX, 1*sizeof(float16_t));

	printf("Started DMA Transfers \n");

	XAxiDma_SimpleTransfer(&AxiDma, (UINTPTR)m_dma_buffer_RX, 1*sizeof(float16_t), XAXIDMA_DEVICE_TO_DMA);
	XAxiDma_SimpleTransfer(&AxiDma, (UINTPTR)image_in_HW, IMAGE_SIZE*sizeof(float16_t), XAXIDMA_DMA_TO_DEVICE);

	while (XAxiDma_Busy(&AxiDma, XAXIDMA_DMA_TO_DEVICE));
	printf("Transferred data from DMA to Device \n");
	while (XAxiDma_Busy(&AxiDma, XAXIDMA_DEVICE_TO_DMA));
	printf("Transferred data from Device to DMA \n");

	Xil_DCacheInvalidateRange((UINTPTR)m_dma_buffer_RX, 1*sizeof(float16_t));

	while(!XCnn_IsDone(&cnn));
	printf("Finished convolution \n");
	printf("%f\n",(float16_t)m_dma_buffer_RX[0]);

	return 0;
}
